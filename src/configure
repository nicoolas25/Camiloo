#!/usr/bin/env ruby

require 'optparse'

module Camiloo
  module Generator
    
    BASE_DIRECTORIES = ['lib',
                        'lib/camiloo',
                        'public',
                        'public/assets',
                        'tmp' ]
    
    def create_directory(base, *args)
      base = Dir.pwd if base.nil? or !base.kind_of? String
      Dir.new(base + File.SEPARATOR + dir)
    end
    
    def copy_files(dest, auto, *args)
      Dir.mkdir dest if !File.exists?(dest) and auto
      return unless File.directory?(dest)
      args.each do |from|
        File.copy(from, dest) if File.exists?(from)
    end
    end

    def generate(base=nil)
      BASE_DIRECTORIES.each { |dir| create_directory(dir, base) }
    end
  end

  module CommandLine
    def self.parse(args)
      options = {}
      options[:base] = Dir.pwd

      opts = OptionParser.new do |opts|
        opts.banner = "Usage: configure [options]"

        opts.separator ""
        opts.separator "Options"

        opts.on("-m URI, MODULE",
                "--map URI, MODULE",
                Array,
                "set an URI to map a module to.") do |array|
          options[:mapping] = {} unless options.key?(:mapping)
          match = array.length == 2
          options[:mapping].merge!({ array[0] => array[1]}) if match
        end
      end

      opts.parse!(args)
      options
    end

    def self.valid?(options)
      r = false
      r ||= options.key?(:name)
      r ||= options.key?(:base)
      r
    end
  end
end

if __FILE__ == $0
  options = Camiloo::CommandLine.parse(ARGV)
  puts options
end
